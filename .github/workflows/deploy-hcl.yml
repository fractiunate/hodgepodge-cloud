name: "Deploy: HCL Project"
run-name: "${{ inputs.mode }} ${{ inputs.project }} in stage ${{ inputs.stage }} on branch ${{ github.ref }}"

on:
  workflow_dispatch:
    inputs:
      mode:
        description: "Plan or Deploy"
        required: true
        type: choice
        options:
          - "Plan"
          - "Apply"
          - "Plan -destroy"
          - "Destroy"
      safety-check:
        description: "Enter delete to confirm destroy"
        required: false
        default: ""
      opentofu-version:
        description: "OpenTofu version to use"
        required: false
        default: "1.10.0-beta1"
      project:
        description: "Project name"
        required: true
        type: choice
        options:
          - "static-webhosting"
      stage:
        description: "Stage"
        required: true
        type: choice
        default: "dev"
        options:
          - "dev"
          - "prod"

concurrency:
  group: ${{ inputs.mode == 'Plan' && github.sha || format('{0}-{1}', inputs.project, inputs.stage) }}
  cancel-in-progress: false

jobs:
  hcl:
    environment: ${{ format('{0}-{1}', inputs.project, inputs.stage) }}
    runs-on: ubuntu-latest
    env:
      backend_config_resource_group_name: ${{ secrets.BACKEND_CONFIG_RESOURCE_GROUP_NAME }}
      backend_config_storage_account_name: ${{ secrets.BACKEND_CONFIG_STORAGE_ACCOUNT_NAME }}
      backend_config_storage_container_name: ${{ secrets.BACKEND_CONFIG_STORAGE_CONTAINER_NAME || 'tfstates' }}
      backend_config_key: ${{ format('{0}-{1}', inputs.project, inputs.stage) }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID || vars.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET || vars.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID || vars.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID || vars.ARM_SUBSCRIPTION_ID }}
    steps:
      - uses: actions/checkout@v4
      - uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: ${{ inputs.opentofu-version || '1.10.0-beta' }}
      - name: OpenTofu Init
        run: |
          tofu -chdir=projects/${{ inputs.project}} init \
            -backend-config="resource_group_name=${{ env.backend_config_resource_group_name }}" \
            -backend-config="storage_account_name=${{ env.backend_config_storage_account_name }}" \
            -backend-config="container_name=${{ env.backend_config_storage_container_name }}" \
            -backend-config="key=${{ env.backend_config_key }}"
      - name: OpenTofu fmt
        id: fmt
        run: tofu fmt -check
        continue-on-error: true
      - name: OpenTofu Validate
        id: validate
        run: tofu validate -no-color
      - name: OpenTofu Plan
        id: plan
        run: tofu -chdir=projects/${{ inputs.project}} \
          $(echo "${{ inputs.mode }}" | tr '[:upper:]' '[:lower:]') \
          -no-color \
          -var-file=${{ inputs.stage }}.tfvars \
          -out=tfplan ${{ ((inputs.mode == 'Destroy') || (inputs.destroy == 'Apply')) && ' -auto-approve' || '' }}
